{"name": "test_second_kupon", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <tests.test_final1.TestClass1 object at 0x000002C1A5AD11D0>\nset_up_browser = <seleniumwire.webdriver.Chrome (session=\"ca707964a98a6a08a93850a2e7aced4d\")>\n\n    @allure.feature('тест сьют Сайт Pizzeria, flou 2')\n    @allure.description('Выбор товаров в корзину, переход на страницу авторизации, оформление заказа')\n    def test_second_kupon(self, set_up_browser):\n        driver = set_up_browser\n        driver.maximize_window()\n        num = str(random.randrange(1, 999999))\n        wait = WebDriverWait(driver, timeout=10)\n        order_list = ['username', 'lastname', 'Казанская 52 - 64', 'Казань', 'Татарстан', '420000',\n                      '78435555555', 'ex' + num + '@inbox.ru']\n        logging.info('Открыие сайта Pizzeria')\n        driver.get(\"http://pizzeria.skillbox.cc/\")\n        time.sleep(8)\n        logging.info('Заполнение корзины - первый заказ:')\n        push_product_to_card(driver)\n        time.sleep(2)\n        elem = driver.find_element(By.XPATH, '//a[text() = \"Мой аккаунт\"]')\n        elem.click()\n        logging.info('Процедура регистрации')\n        elem = driver.find_element(By.XPATH, '//button[@class=\"custom-register-button\"]')\n        elem.click()\n        time.sleep(2)\n        registration(driver, num, order_list)\n        logging.info('Переход к корзину')\n        elem = driver.find_element(By.XPATH, '//li[@id = \"menu-item-29\"]/a[contains(text(), \"Корзина\")]')\n        elem.click()\n        logging.info('Применение купона')\n        primenenie_kupona(driver, wait, 'GIVEMEHALYAVA')\n        time.sleep(2)\n        logging.info('Проверка применения скидки в первый раз')\n        price = driver.find_element(By.XPATH,\n                                    '//div[@class=\"cart_totals\"]//td[@data-title=\"Общая стоимость\"]//bdi').text\n        total_price = driver.find_element(By.XPATH, '//td[@data-title=\"Сумма\"]//bdi').text\n        proverka_skidki(1, price, total_price)\n        logging.info('Проверка прошла!')\n        logging.info('Переход к оплате')\n        driver.find_element(By.XPATH, '//a[@class=\"checkout-button button alt wc-forward\"]').click()\n        logging.info('Ввод реквизитов доставки: Имя, Фамилия, Адрес, Город, Обл, Индекс, Телефон, Дата заказа...')\n        input_reg_form_data(1, driver, order_list)\n        elem = driver.find_element(By.XPATH, '//li[@id = \"menu-item-26\"]/a')\n        elem.click()\n        time.sleep(5)\n        logging.info('Заполнение корзины - второй заказ:')\n        push_product_to_card(driver)\n        logging.info('Переход к корзину')\n        elem = driver.find_element(By.XPATH, '//li[@id = \"menu-item-29\"]/a[contains(text(), \"Корзина\")]')\n        elem.click()\n        time.sleep(3)\n        logging.info('Применение купона')\n        primenenie_kupona(driver, wait, 'GIVEMEHALYAVA')\n        time.sleep(2)\n        logging.info('Проверка применения скидки в второй раз')\n        price = driver.find_element(By.XPATH,\n                                    '//div[@class=\"cart_totals\"]//td[@data-title=\"Общая стоимость\"]//bdi').text\n        total_price = driver.find_element(By.XPATH, '//td[@data-title=\"Сумма\"]//bdi').text\n>       proverka_skidki(2, price, total_price)\n\ntest_final1.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nflag = 2, price = '3020,00₽', total_price = '2718,00₽'\n\n    def proverka_skidki(flag, price, total_price):\n        price1 = (price[:-1])\n        price1 = price1.replace(',', '.')\n        total_price1 = (total_price[:-1])\n        total_price1 = total_price1.replace(',', '.')\n        print(price1, total_price1)\n        if flag == 1:\n            assert float(price1) - float(price1) * 0.1 == float(total_price1)\n        elif flag == 2:\n>           assert float(price1) == float(total_price1)\nE           AssertionError\n\n..\\src\\actions\\proverka_skidki.py:10: AssertionError"}, "description": "Выбор товаров в корзину, переход на страницу авторизации, оформление заказа", "attachments": [{"name": "log", "source": "152f4e5a-1585-44ea-a378-f6dccc427b40-attachment.txt", "type": "text/plain"}], "start": 1701122527371, "stop": 1701122615551, "uuid": "c0c8e386-2d06-442d-b9ec-fcadc3dee266", "historyId": "a27a69c1313d3ea59180bf5d57f1383c", "testCaseId": "a27a69c1313d3ea59180bf5d57f1383c", "fullName": "test_final1.TestClass1#test_second_kupon", "labels": [{"name": "feature", "value": "тест сьют Сайт Pizzeria, flou 2"}, {"name": "suite", "value": "test_final1"}, {"name": "subSuite", "value": "TestClass1"}, {"name": "host", "value": "DESKTOP-FAS3GBR"}, {"name": "thread", "value": "7480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_final1"}]}